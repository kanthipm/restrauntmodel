```{r}
library(ggplot2)

set.seed(2) 

operating_hours <- 12  
lambda_arrival <- 5   
lambda_service <- 6   

total_arrivals <- rpois(1, lambda_arrival * operating_hours)
arrival_times <- cumsum(rexp(total_arrivals, rate = lambda_arrival))

service_times <- rexp(total_arrivals, rate = lambda_service)

wait_times <- numeric(total_arrivals)
queue_lengths <- numeric(total_arrivals)
table_free_time <- 0
current_queue <- 0
downtime <- 0

for (i in 1:total_arrivals) {
  if (arrival_times[i] > table_free_time) {
    downtime <- downtime + (arrival_times[i] - table_free_time)
  }
  
  while (current_queue > 0 && table_free_time <= arrival_times[i]) {
    current_queue <- current_queue - 1
  }
  
  wait_time <- max(0, table_free_time - arrival_times[i])
  wait_times[i] <- wait_time
  
  if (arrival_times[i] < table_free_time) {
    current_queue <- current_queue + 1
  }
  
  table_free_time <- max(table_free_time, arrival_times[i]) + service_times[i]
  
  queue_lengths[i] <- current_queue
}

mean_wait <- mean(wait_times) * 60 
median_wait <- median(wait_times) * 60 
mean_queue_length <- mean(queue_lengths)
downtime_hours <- downtime

results <- data.frame(
  Metric = c("Mean Waiting (min)", "Median Waiting (min)", "Mean Queue Length", "Downtime (hours)"),
  Value = c(mean_wait, median_wait, mean_queue_length, downtime_hours)
)

print(results)

wait_times_df <- data.frame(wait_times)
queue_length_df <- data.frame(queue_lengths)

ggplot(wait_times_df, aes(x = wait_times)) +
  geom_histogram(binwidth = 0.1, fill = "skyblue", color = "black") +
  labs(title = "Frequency of Customers by Waiting Times",
       x = "Waiting Time (hours)", y = "Frequency (Number of Customers)") +
  theme_minimal()

ggplot(queue_length_df, aes(x = queue_lengths)) +
  geom_histogram(binwidth = 1, fill = "lightgreen", color = "black") +
  labs(title = "Frequency of Customers by Queue Lengths",
       x = "Queue Length", y = "Frequency (Number of Customers)") +
  theme_minimal()


```